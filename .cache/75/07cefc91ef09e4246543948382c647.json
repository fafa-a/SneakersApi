{"id":"../node_modules/clone-response/src/index.js","dependencies":[{"name":"C:\\Users\\fable\\Documents\\Works\\SneakersApi\\package.json","includedInParent":true,"mtime":1602453222475},{"name":"C:\\Users\\fable\\Documents\\Works\\SneakersApi\\node_modules\\clone-response\\package.json","includedInParent":true,"mtime":1602453627612},{"name":"stream","loc":{"line":3,"column":28},"parent":"C:\\Users\\fable\\Documents\\Works\\SneakersApi\\node_modules\\clone-response\\src\\index.js","resolved":"C:\\Users\\fable\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\stream-browserify\\index.js"},{"name":"mimic-response","loc":{"line":4,"column":30},"parent":"C:\\Users\\fable\\Documents\\Works\\SneakersApi\\node_modules\\clone-response\\src\\index.js","resolved":"C:\\Users\\fable\\Documents\\Works\\SneakersApi\\node_modules\\mimic-response\\index.js"}],"generated":{"js":"'use strict';\n\nconst PassThrough = require('stream').PassThrough;\nconst mimicResponse = require('mimic-response');\n\nconst cloneResponse = response => {\n\tif (!(response && response.pipe)) {\n\t\tthrow new TypeError('Parameter `response` must be a response stream.');\n\t}\n\n\tconst clone = new PassThrough();\n\tmimicResponse(response, clone);\n\n\treturn response.pipe(clone);\n};\n\nmodule.exports = cloneResponse;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/clone-response/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/clone-response/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/clone-response/src/index.js":"'use strict';\n\nconst PassThrough = require('stream').PassThrough;\nconst mimicResponse = require('mimic-response');\n\nconst cloneResponse = response => {\n\tif (!(response && response.pipe)) {\n\t\tthrow new TypeError('Parameter `response` must be a response stream.');\n\t}\n\n\tconst clone = new PassThrough();\n\tmimicResponse(response, clone);\n\n\treturn response.pipe(clone);\n};\n\nmodule.exports = cloneResponse;\n"},"lineCount":18}},"error":null,"hash":"438031b89918804abc56f183a5badfd6","cacheData":{"env":{}}}